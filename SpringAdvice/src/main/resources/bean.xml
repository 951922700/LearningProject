<?xml version="1.0" encoding="UTF-8" ?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
         http://www.springframework.org/schema/context
          http://www.springframework.org/schema/context/spring-context.xsd
            http://www.springframework.org/schema/aop
            http://www.springframework.org/schema/aop/spring-aop.xsd
            http://www.springframework.org/schema/tx
            http://www.springframework.org/schema/tx/spring-tx.xsd">

    <context:component-scan base-package="com.lyl"></context:component-scan>
    <!--配置jdbcTemplate-->
    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <property name="dataSource" ref="dataSource"></property>
    </bean>

    <bean id="dataSource" class="com.mchange.v2.c3p0.DriverManagerDataSource">
        <property name="driverClass" value="com.mysql.cj.jdbc.Driver"></property>
        <property name="jdbcUrl" value="jdbc:mysql://localhost:3306/spring?useUnicode=true&amp;characterEncoding=utf8&amp;serverTimezone=GMT%2B8"></property>
        <property name="user" value="root"></property>
        <property name="password" value="943033940"></property>
    </bean>



    <!--spring中基于XML的声明式事务控制配置步骤
    1.配置事务管理器
    2.配置事务通知
            需要导入事务的XML约束 tx
             使用tx：advice标签配置事务通知
             transaction-manager:给事务通知提供一个管理器引用
    3.配置AOP切入点表达式
    4.建立切入点表达式和事务通知的关系
    5.配置事务属性（在事务的通知tx：advice标签的内部）
            -->
    <!--配置事务管理器-->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"></property>
    </bean>
    <!--
    配置事务的通知
    <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <tx:attributes>

            isolation="" 用于指定事务的隔离级别，默认值是DEFAULt，表示使用数据库的默认隔离级别
            no-rollback-for=""   用于指定一个异常，当产生该异常时，事务回滚，产生其他异常时，事务不会滚
             propagation="" 用于指定事务的传播行为，默认值是REQUIRED，表示一定会有事务，增删改的选择。查询方法 可以选择SUPPORTS
              read-only="" 用于指定事务是否只读。只有查询方法才能设置为true，默认值是false，表示读写
            rollback-for="" timeout=""用于指定异常，产生该异常事务不回滚
            timeout:用于指定事务的超时时间，默认值是-1，表示永不超时，有的话以秒为单位

            <tx:method name="*" propagation="REQUIRED" read-only="false"/>
            <tx:method name="find*" propagation="REQUIRED" read-only="true"/>
        </tx:attributes>
    </tx:advice>

    <aop:config>
        <aop:pointcut id="pt1" expression="execution(* com.lyl.service.impl.*.*(..))"></aop:pointcut>

        <aop:advisor advice-ref="txAdvice" pointcut-ref="pt1"></aop:advisor>
    </aop:config>
    -->

    <!--spring中基于注解的声明式事务控制配置步骤
    1.配置事务管理器
    2.开启spring对注解事务的支持 tx:annotation-driven
    3.在需要事务支持的地方使用@Transactional注解
    4.建立切入点表达式和事务通知的关系
    5.配置事务属性（在事务的通知tx：advice标签的内部）
            -->
    <!--配置事务管理器-->

    <tx:annotation-driven transaction-manager="transactionManager"></tx:annotation-driven>
</beans>