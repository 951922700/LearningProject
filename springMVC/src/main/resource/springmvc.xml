<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="
       http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/mvc
       http://www.springframework.org/schema/mvc/spring-mvc.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd
">
    <!--要让这个配置类生效，得在web.xml添加全局变量-->

    <!--开启注解扫描-->
    <context:component-scan base-package="com.lyl"></context:component-scan>

    <!--配置视图解析器对象-->
    <bean id="internalResourceViewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <!--表示文件所在的目录-->
        <property name="prefix" value="/WEB-INF/pages/"></property>
        <!--文件后缀名-->
        <property name="suffix" value=".jsp"></property>
    </bean>

    <!--配置自定义转换器 conversion-service="conversionService"下面注解支持需要加上-->
    <bean id="conversionService" class="org.springframework.context.support.ConversionServiceFactoryBean">
        <property name="converters">
            <set>
                <bean class="com.lyl.utils.StringToDateConverter"/>
            </set>
        </property>
    </bean>
    <!--配置文件解析器id 值固定-->
    <bean id="multipartResolver"  class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <!--文件大小 10m 10*1024*1024-->
        <property name="maxUploadSize" value="10485760"></property>
    </bean>

    <!--配置异常处理器-->
    <bean id="sysExceptionResolver" class="com.lyl.exception.SysExceptionResolver"></bean>

    <!--告诉前端控制器哪些静态资源不拦截，比如js，css,你直接用script引用jquery.js是会被拦截的
    location元素表示webapp目录下的static包下的所有文件；
    mapping元素表示以/static开头的所有请求路径，如/static/a 或者/static/a/b；
    该配置的作用是：DispatcherServlet不会拦截以/static开头的所有请求路径，并当作静态资源
    交由Servlet处理。
    -->
    <mvc:resources location="/img/" mapping="/img/**"/>
    <mvc:resources location="/js/" mapping="/js/**"/>
    <mvc:resources location="/css/" mapping="/css/**"/>

    <!--开启springMVC框架注解的支持-->
    <mvc:annotation-driven conversion-service="conversionService"/>

    <!--
        过滤器在url-pattern中配置了/*之后，可以对所有要访问的自愿拦截
        拦截器只拦截controller方法
        要自定义拦截器，要求必须实现：HandlerInterceptor接口
    -->
    <!--配置拦截器（如果想配置多个拦截器直接往顺序配置就可以执行顺序12contron2121）-->
    <mvc:interceptors>
        <mvc:interceptor>
            <!--要拦截的具体方法-->
            <mvc:mapping path="/excep/*"/>
            <!--不拦截的方法-->
            <!--<mvc:exclude-mapping path=""/>-->
            <!--配置拦截器对象-->
            <bean class="com.lyl.interceptor.MyInterceptor1"></bean>
        </mvc:interceptor>
    </mvc:interceptors>
</beans>